---
name: CI
on:
  push:
    tags:
      - 'v*'
    branches:
      - 'main'
      - 'master'
  pull_request:
env:
  # renovate: datasource=github-releases depName=golangci/golangci-lint versioning=semver-coerced
  GOLANGCI_LINT_VERSION: "v2.3.1"
  # renovate: datasource=github-releases depName=goreleaser/goreleaser versioning=semver-coerced
  GORELEASER_VERSION: "v2.11.2"
  # renovate: datasource=github-releases depName=ko-build/ko versioning=semver-coerced
  KO_VERSION: "v0.18.0"
jobs:
  go:
    name: Go
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
        with:
          go-version-file: 'go.mod'
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8
        with:
          version: ${{ env.GOLANGCI_LINT_VERSION }}
      - name: Run tests
        run: go test -v ./...
      - name: Build (Snapshot)
        uses: goreleaser/goreleaser-action@9c156ee8a17a598857849441385a2041ef570552 # v6
        if: ${{ ! startsWith(github.ref, 'refs/tags/') }}
        with:
          version: ${{ env.GORELEASER_VERSION }}
          args: --clean --skip=ko,publish --snapshot
      - name: Upload Artifacts (Snapshot)
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        if: ${{ ! startsWith(github.ref, 'refs/tags/') }}
        with:
          name: dist
          path: dist/*
      - name: Set up ko
        uses: ko-build/setup-ko@d006021bd0c28d1ce33a07e7943d48b079944c8d # v0.9
        if: startsWith(github.ref, 'refs/tags/')
        with:
          version: ${{ env.KO_VERSION }}
      - name: Release
        uses: goreleaser/goreleaser-action@9c156ee8a17a598857849441385a2041ef570552 # v6
        if: startsWith(github.ref, 'refs/tags/')
        with:
          version: ${{ env.GORELEASER_VERSION }}
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
